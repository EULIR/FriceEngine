package org.frice.game.utils.data

import org.frice.game.utils.misc.forceGet
import org.frice.game.utils.misc.forceRun
import java.io.File
import java.util.*

/**
 * Created by ice1000 on 2016/8/20.
 *
 * @author ice1000
 * @since v0.4.1
 */
class Preference(private val file: File) : Database {

	constructor(path: String) : this(File(path))

	val properties: Properties = Properties()

	init {
		if (!file.exists()) file.createNewFile()
		forceRun { properties.load(file.inputStream()) }
	}

	override fun <T> query(key: String, default: T): T = when (properties[key].toString()) {
		"true" -> true as T
		"false" -> false as T
		else -> forceGet(properties[key] as T ?: default) {
			return@forceGet Integer.parseInt(properties[key] as String) as T
		}
	}

	override fun insert(key: String, value: Any?) {
		properties.put(key, value.toString())
		properties.store(file.outputStream(), "Automatically generated by ice1000 Frice Engine")
	}

	fun list(): List<Pair<Any, Any>> = properties.toList()
}